class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n = nums.size();

        vector<vector<int>> result;
       
        sort(nums.begin(), nums.end());

        if(nums[0] > 0 && target<=0) return result;
        else if(nums[n-1] < 0 && target>=0) return result;

        for(int i=0; i<n-3; i++){

            if(i>0 && nums[i]==nums[i-1]) continue;

            for(int j=i+1; j<n-2; j++){

                if(j > i+1 && nums[j]==nums[j-1]) continue;
                
                long long uptil = nums[i]+nums[j];
                long long find = target - uptil;

                int start = j+1, end = n-1;

                while(start < end){
                    int pstart = start, pend = end;

                    if(nums[start] + nums[end] == find){
                        result.push_back({nums[i], nums[j], nums[start], nums[end]});
                        start++;
                        end--;
                    }
                    else if(nums[start] + nums[end] > find) end--;
                    else start++;

                    while(start > pstart && nums[start]==nums[pstart] && start<end) start++;
                    while(end < pend && nums[end]==nums[pend] && start<end) end--;
                }

            }
        }

        return result;
        
    }
};
