class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    bool dfs(int node, int parent, vector<int> adj[], vector<int> &visited){
        visited[node] = 1;

        for(auto it : adj[node]){
            if(visited[it]==1 && it!=parent) return true;
            if(visited[it]==0){
                if(dfs(it, node, adj, visited)) return true;
            }
        }

        return false;
    }
    bool isCycle(int V, vector<int> adj[]) {
        vector<int> visited(V,0);
        
        for(int i=0; i<V; i++){
            if(visited[i]==0){
                if(dfs(i, -1, adj, visited)) return true;
            }
        }
        
        return false;
    }
};
