class Solution {
public:
    void solve(int index, vector<int>& nums, int target, vector<int> &curr, vector<vector<int>> &result){
        //base case
        if(target==0){
            result.push_back(curr);
            return;
        }

        for(int i=index; i<nums.size(); i++){
            if(i>index && nums[i]==nums[i-1]) continue;

            if(nums[i] <= target){
                curr.push_back(nums[i]);
                solve(i+1, nums, target-nums[i], curr, result);
                curr.pop_back();
            }
            else return;
        }       
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(), candidates.end());
        vector<vector<int>> result;
        vector<int> curr;
        solve(0, candidates, target, curr, result);
        return result;
    }
};
