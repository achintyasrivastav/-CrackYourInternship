//sol 1
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {

        int i=0, j=0;

        while(i<m && j<n){

            if(nums1[i] > nums2[j]){
                swap(nums1[i],nums2[j]);
                sort(nums2.begin(), nums2.end());
            }
            
            i++;
        }

        while(j<n && i<(m+n)) {
            nums1[i] = nums2[j];
            i++;
            j++;
        }
        
    }
};

//sol 2class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {

        int i=m-1, j=n-1, index=(m+n)-1;

        while(i>=0 && j>=0){
            if(nums1[i] <= nums2[j]){
                nums1[index] = nums2[j];
                index--;
                j--;
            }
            else{ 
                nums1[index] = nums1[i];
                index--;
                i--;
            }
        }
        
        while(j>=0){
            nums1[index] = nums2[j];
            j--;
            index--;
        }
    }
};
