/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(int row, int col, TreeNode* root, map<int,vector<pair<int,int>>> &mp){
        //base case
        if(root==NULL) return;

        inorder(row+1, col-1, root->left, mp);
        mp[col].push_back({row, root->val});
        inorder(row+1, col+1, root->right, mp);
    }
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int,vector<pair<int,int>>> mp;
        inorder(0, 0, root, mp);

        vector<vector<int>> result;

        for(auto it : mp){
            vector<int> temp;
            sort(it.second.begin(), it.second.end());
            for(auto i : it.second){
                temp.push_back(i.second);
            }
            result.push_back(temp);
        }

        return result;
    }
};
