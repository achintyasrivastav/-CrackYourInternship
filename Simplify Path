class Solution {
public:
    string simplifyPath(string path) {
        int n = path.size();
        string ans = "";

        stack<string> s;

        for(int i=0; i<n; i++){
            char curr = path[i];

            if(curr=='/'){
                if(s.empty() || s.top()!="/") s.push("/");
                continue;
            }
            else if(curr=='.'){
                string temp = "";
                while(i<n && path[i]!='/'){
                    temp.push_back(path[i]);
                    i++;
                }
                if(i<n) i--;

                if(temp.length()==1) continue;
                if(temp.length()==2){
                    if(temp[0]=='.' && temp[1]=='.'){
                        if(s.size()==1) continue;
                        else{
                            s.pop();
                            if(!s.empty()) s.pop();
                        }
                        continue;
                    }
                }
                s.push(temp);
            }
            else if((curr>='a' && curr<='z') || (curr>='A' && curr<='Z')){
                string temp = "";
                while(i<n && path[i]!='/'){
                    temp.push_back(path[i]);
                    i++;
                }

                if(i<n) i--;

                s.push(temp);
            }
        }

        if(s.size()==1) return "/";
        if(s.top()=="/") s.pop();

        while(!s.empty()){
            ans = s.top() + ans;
            s.pop();
        }

        return ans;
        
    }
};
